const querystring = require("querystring");
const TokenGenerator = require('uuid-token-generator');
const { GoogleSpreadsheet } = require('google-spreadsheet');

exports.handler = async (event, context) => {
    // Only allow POST
    if (event.httpMethod === "GET") {
        return { statusCode: 405, body: "Method Not Allowed" };
    }

    // When the method is POST, the name will no longer be in the eventâ€™s
    // queryStringParameters â€“ itâ€™ll be in the event body encoded as a query string
    const body = querystring.parse(event.body);
    const name = body.firstName || "World";
    const {itemID} = event.queryStringParameters;
    const tokenGenerator = new TokenGenerator(); // Default is a 128-bit token encoded in base58
    const token = tokenGenerator.generate();

    // Initialize the sheet - doc ID is the long id in the sheets URL
    const doc = new GoogleSpreadsheet(process.env.REACT_APP_GOOGLE_SHEETS_ID);

    let privateKey = process.env.GOOGLE_PRIVATE_KEY && process.env.GOOGLE_PRIVATE_KEY.replace(/\\n/gm, '\n')

    console.log("**** key121212 ", process.env.GOOGLE_PRIVATE_KEY)

    // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
    await doc.useServiceAccountAuth({
    // env var values are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
        client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
        private_key: privateKey,
        // client_email: "physio@aastha-health-plus.iam.gserviceaccount.com",
        // private_key: "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDJomxn92xv4v5o\nkQujeBzUJAU1anQjkXUCAoRNZLFQhyi88J/sud2WxMSYoRcx53wdb1AH6B/c99Z4\ns6BSzLxOHh0e9JKtZ5AHmICDHDucrLkGcAccaTMau78Ilbbhp8oD2RJfQqbbcB5e\nuhkh19aVQJzBZZ77wRq8iriEnGLn8seDKf4DkBjRxUowZIZbJgYj0GoUhK6vI+Dm\nPRw+HoBz5MF2saAUz0oH54MneLi+lzlXgjN89ephJ3KMLJ0UcQcvmECihAiiw+s4\nhy+idtJS8fGvy+JdCCkxZdTwTIUPThPVo5z1H//E7u4yA9uILkJE+RFdFDwhayDq\ngoBGQ3znAgMBAAECggEABwB4t6RUHXW9erYZ65BLnmMUOmzUiAbdQ4RnQb5bmSQV\nM98+calp2q10jw3kN07TJ/AdafJ5zZUrQaYpmbATlFOslGgCNYe67N7/2Q2zu3B7\nPSnKWKAFyHzfWMkrwGqwmjE0irhOzdOQsNHRKgEYkFBER6owVIyGuCgwP79w5wSe\n3idqgqP/VENhxVQ4nMyln3DPYWpFGXzL82hyIyOdL9azt/jLWlysIvhmsG/XCBgl\npUTwKX6wymDgTuOTs0F01Owop0ch4EllT25iY4JzpYNwWsHp6lSVFoKTaI9pIrAP\nvia1w8wJTPSHgrF6qSiPaW74+YzmP12bD+TDpyqNEQKBgQDpMNDn26+K/ZGGUzyd\n/y4cdltT78iFzSJOlWX+XREAvaUwCoMft9x+//n2eyY7ta7TvSPjHge/A6x0cxMS\n75ReCFZnGowtA9osYb/RlTI+VACH1NzkNob7jaXUZSMVVRISemzBtGPAL/ITva67\n4Wfo0bkmyxlS0i0lTQdJov1PCQKBgQDdW212TddJ1ZtoWo7uQFWuI5xo7ohbfBTN\ne+DoyViDnt0CzVYEAFhy1ew86jiWA7aYEDCprrktj+mae4/mj3XcBdOuiLwWRRJ3\nZ/ewoUCfm8lcMxgK7I/1BnwXUX+XZvLcupNafLa5uOm5FoTNGoXDHz7V4ZF3JkSd\n1YUSyNJ4bwKBgAQc/FJaqaoF9v8rkLIowiN2Yv4ECMFzcNt5/yaRda9RqQxD4zQ4\nBgendD1Ixs/e0Iqjl3J2ISTZZ71WGkwHNdLCyuNesIJKwxptTvjfbNd0m93Jf2v3\nGkJtqTMp5YiGy57P0gNIr0nAjsCSY/akbzTIHj/07Sls06cIyMwft+AhAoGBANhB\nyUhKNimZObISvw7+5XYyrk1JtQgDymMSQqHKi+JTI0Lojr9sAv12B81fWpcc25fm\nQVSVMa7UqXnWe7jZsWCahLtANNlg8/CaLz9t2q/USD3+YN/TS7Urd7JkWc31sxF4\naht+OhpqEFVWLbofzkzZys60CCSqy2CTyOWYMx+bAoGAVPNrEc/kMNyRbfsbypM/\nBDnzQsWt2uD/nUL771fm58sZdVl6R/CiWVhESyg7BtJhH57VYsCuEhVogNB/OOVB\nAm2MpCX12RxEWYJDxdyaSzWLQYg7TqXG2il3xGprmtiKDX3MtwDIIoGtTLd8Y2UW\nAxBy+4FSdF0xbrUOlyCo4pg=\n-----END PRIVATE KEY-----\n"
    });
    await doc.loadInfo(); // loads document properties and worksheets

    const sheet = doc.sheetsByTitle['Sessions']; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
    // read rows
    const rows = await sheet.getRows();
    console.log(sheet.title);
    console.log(rows.length || 0);

    // append row
    // await sheet.addRow(
    // { 
    //     'ðŸ”’ Row ID': token,
    //     'Patient ID': body.patientId,        
    // });

    return {
        statusCode: 200,
        body: JSON.stringify({token:token, name: `Hello, ${name}`, id: itemID, title: sheet.title, count: sheet.rowCount}),
        // body: JSON.stringify(event),
        headers: {
            'X-Requested-With': '*',
            'Access-Control-Allow-Headers': 'Content-Type,Access-Control-Allow-Origin,Access-Control-Allow-Methods',
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Methods': 'POST,GET,OPTIONS',
            'Content-Type': 'application/json',
        },
    };
};

// exports.handler = async (event, context) => {
//     let response
//     try {
//       response = await fetch(API_ENDPOINT)
//       // handle response
//     } catch (err) {
//       return {
//         statusCode: err.statusCode || 500,
//         body: JSON.stringify({
//           error: err.message
//         })
//       }
//     }
  
//     return {
//       statusCode: 200,
//       body: JSON.stringify({
//         data: response
//       })
//     }
//   }